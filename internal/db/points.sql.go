// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: points.sql

package db

import (
	"context"

	"github.com/lib/pq"
)

const getPointsForID = `-- name: GetPointsForID :many
SELECT id, datasheet_id, line, description, cost FROM points
WHERE datasheet_id = ANY($1)
`

func (q *Queries) GetPointsForID(ctx context.Context, datasheetID []int32) ([]Point, error) {
	rows, err := q.db.QueryContext(ctx, getPointsForID, pq.Array(datasheetID))
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Point
	for rows.Next() {
		var i Point
		if err := rows.Scan(
			&i.ID,
			&i.DatasheetID,
			&i.Line,
			&i.Description,
			&i.Cost,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
