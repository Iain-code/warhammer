// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: abilities.sql

package db

import (
	"context"
)

const getAbilities = `-- name: GetAbilities :many
SELECT datasheet_id, line, ability_id, model, name, description, type, parameter FROM abilities
`

func (q *Queries) GetAbilities(ctx context.Context) ([]Ability, error) {
	rows, err := q.db.QueryContext(ctx, getAbilities)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Ability
	for rows.Next() {
		var i Ability
		if err := rows.Scan(
			&i.DatasheetID,
			&i.Line,
			&i.AbilityID,
			&i.Model,
			&i.Name,
			&i.Description,
			&i.Type,
			&i.Parameter,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
